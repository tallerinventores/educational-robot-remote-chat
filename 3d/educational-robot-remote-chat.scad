/* {{{ %%SECTION_HEADER%%
 * * * *
 * This header information is automatically generated by KodeUtils.
 *
 * File 'educational-robot-remote-chat.scad' edited by kwendenarmo,
 * last modified: 2016-07-03.
 * This file is part of 'educational-robot-remote-chat' package, please see
 * the readme files for more information about this file and this package.
 *
 * Copyright (C) 2016 by kwendenarmo <kwendenarmo@akornsys-rdi.net>
 * Released under the GNU GPLv3
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * * * *
 * %%EOS_HEADER%% }}}
 */

$fn=360;

/*
 *  Tornillos
 *  -   Portapilas 2x M3x6
 *  -   Motor 2x M3x6
 *  -   Anillos espaciadores 4x M3x6
 *  -   Cierre chasis 4x M3x30 + 1 arandela plana + separador
 *  -   Pantalla 4x M3x12 + 1 arandela plana + 1 tuerca
 */

color("pink") translate([0,0,22]) chasis();
color("pink") translate([-36.5,-27.5,0]) spacer();
color("pink") translate([66.5,-27.5,0]) spacer();
color("pink") translate([15,36.5,0]) spacer();
color("pink") translate([15,-91.25,0]) spacer();
color("pink") translate([0,0,-3]) base();
color("white") translate([-5, -88, 47]) led();
color("white") translate([35, -88, 47]) led();
color("red") translate([-5, 38, 47]) rotate([0,0,180]) led();
color("red") translate([35, 38, 47]) rotate([0,0,180]) led();
color("orange") translate([-13, 36, 47]) rotate([0,0,180]) led();
color("orange") translate([43, 36, 47]) rotate([0,0,180]) led();
translate([33,-60,54.4])  rotate([0,0,90]) lcd();
translate([-7.75,-85,22]) rotate([90,0,0]) hcsr04();
translate([-16,-56.5,0]) portapilas();
translate([-8.75,20,32]) rotate([0,180,180]) roben_zond();
translate([-20,-60,-15.5]) rotate([0,0,-90]) rueda();   //rueda delantera derecha
translate([50,-60,-15.5]) rotate([0,0,90]) rueda();     //rueda delantera izquierda
translate([-20,5,-15.5]) rotate([0,0,-90]) rueda();     //rueda trasera derecha
translate([50,5,-15.5]) rotate([0,0,90]) rueda();       //rueda trasera derecha
translate([15,5,-15.5]) rotate([180,0,0]) motor(1);     //motor
//translate([15,5,-15.5]) rotate([180,0,0]) motor(3);     //motor
translate([15,-60,-15.5]) eje_delantero();              //eje delantero

module chasis() {
    difference() {
        //chasis
        hull() {
            translate([0, -55, 0]) cylinder(r=40, h=20);        //esquina delantera derecha
            translate([30, -55, 0]) cylinder(r=40, h=20);       //esquina delantera izquierda
            translate([0, 0, 0]) cylinder(r=40, h=20);          //esquina trasera derecha
            translate([30, 0, 0]) cylinder(r=40, h=20);         //esquina trasera izquierda
            translate([10, -30, 20]) cylinder(r=40, h=20);      //esquina superior delantera derecha
            translate([20, -30, 20]) cylinder(r=40, h=20);      //esquina superior delantera izquierda
            translate([10, -10, 20]) cylinder(r=40, h=20);     //esquina superior trasera derecha
            translate([20, -10, 20]) cylinder(r=40, h=20);      //esquina superior trasera izquierda
            //translate([0, -15, 10]) cylinder(r=40, h=20);       //lateral derecho
            //translate([30, -15, 10]) cylinder(r=40, h=20);      //lateral izquierdo
        }
        union () {
            //interior chasis
            difference() {
                //silueta chasis
                hull() {
                    translate([0, 0, -1]) cylinder(r=38, h=20);         //esquina trasera derecha
                    translate([0, -55, -1]) cylinder(r=38, h=20);       //esquina delantera derecha
                    translate([30, -55, -1]) cylinder(r=38, h=20);      //esquina delantera izquierda
                    translate([30, 0, -1]) cylinder(r=38, h=20);        //esquina trasera izquierda
                    translate([10, -30, 18]) cylinder(r=38, h=20);      //esquina superior delantera derecha
                    translate([20, -30, 18]) cylinder(r=38, h=20);      //esquina superior delantera izquierda
                    translate([9.5, -10, 18]) cylinder(r=38, h=20);     //esquina superior trasera derecha
                    translate([20, -10, 18]) cylinder(r=38, h=20);      //esquina superior trasera izquierda
                    *translate([30, -15, 10]) cylinder(r=38, h=20);     //esquina superior izquierda
                    *translate([0, -15, 10]) cylinder(r=38, h=20);      //esquina superior derecha
                }
                union() {
                    //topes pantalla
                    union() {
                        translate([31,-25,33.5]) cube([2,10,4.5]);
                        translate([-3,-10,33.5]) cube([2,10,4.5]);
                        translate([13,-60,33.5]) cube([10,2,4.5]);
                    }
                    //topes LED
                    union() {
                        translate([-5, -83, 25]) rotate([90, 0, 0]) cylinder(r=3.5, h=9);  //delantero derecho
                        translate([35, -83, 25]) rotate([90, 0, 0]) cylinder(r=3.5, h=9);  //delantero izquierdo
                        translate([-5, 39, 25]) rotate([90, 0, 0]) cylinder(r=3.5, h=6);   //trasero derecho centro
                        translate([-13, 37, 25]) rotate([90, 0, 0]) cylinder(r=3.5, h=6);  //trasero derecho extremo
                        translate([35, 39, 25]) rotate([90, 0, 0]) cylinder(r=3.5, h=6);   //trasero izquierdo centro
                        translate([43, 37, 25]) rotate([90, 0, 0]) cylinder(r=3.5, h=6);   //trasero izquierdo extremo
                    }
                    //montaje
                    union() {
                        translate([-38,-32.5,0]) cube([5,10,40]);
                        translate([63,-32.5,0]) cube([5,10,40]);
                        translate([5,33,0]) cube([20,5,40]);
                        translate([11.5,-93,0]) cube([7,5,40]);
                    }
                }
            }
            //pantalla LCD
            translate([-3, -60, 37]) color([0,0,0]) {
                union() {
                    translate([5.85, 3.9, 0]) cube([27.3, 72.2, 4]);
                    translate([2.5, 2.5, 0]) cylinder(r=1.75, h=4);
                    translate([2.5, 77.5, 0]) cylinder(r=1.75, h=4);
                    translate([33.5, 2.5, 0]) cylinder(r=1.75, h=4);
                    translate([33.5, 77.5, 0]) cylinder(r=1.75, h=4);
                }
            }
            // LED
            union() {
                translate([-5, -75, 25]) rotate([90, 0, 0]) cylinder(r=2.5, h=20);  //delantero derecho
                translate([-5, -63, 25]) rotate([90, 0, 0]) cylinder(r=3, h=20);    //rebaje delantero derecho
                translate([35, -75, 25]) rotate([90, 0, 0]) cylinder(r=2.5, h=20);  //delantero izquierdo
                translate([35, -63, 25]) rotate([90, 0, 0]) cylinder(r=3, h=20);    //rebaje delantero izquierdo
                translate([-5, 40, 25]) rotate([90, 0, 0]) cylinder(r=2.5, h=10);   //trasero derecho centro
                translate([-5, 33, 25]) rotate([90, 0, 0]) cylinder(r=3, h=10);     //rebaje trasero derecho centro
                translate([-13, 40, 25]) rotate([90, 0, 0]) cylinder(r=2.5, h=10);  //trasero derecho extremo
                translate([-13, 31, 25]) rotate([90, 0, 0]) cylinder(r=3, h=10);    //rebaje trasero derecho extremo
                translate([35, 40, 25]) rotate([90, 0, 0]) cylinder(r=2.5, h=10);   //trasero izquierdo centro
                translate([35, 33, 25]) rotate([90, 0, 0]) cylinder(r=3, h=10);   //rebaje trasero izquierdo centro
                translate([43, 40, 25]) rotate([90, 0, 0]) cylinder(r=2.5, h=10);   //trasero izquierdo extremo
                translate([43, 31, 25]) rotate([90, 0, 0]) cylinder(r=3, h=10);   //rebaje trasero izquierdo extremo
            }
            //ruedas
            union() {
                translate([-50, 5, -15.5]) rotate([0, 90, 0]) cylinder(r=27.5, h=130);      //ruedas traseras
                translate([-50, -60, -15.5]) rotate([0, 90, 0]) cylinder(r=27.5, h=130);    //ruedas delantera
            }
            //sensor ultrasonidos
            translate([0, -90, 0]) union(){
                translate([27.95, 0, 10.6]) rotate([90, 0, 0]) cylinder(r=8.25, h=10);
                translate([1.95, 0, 10.6]) rotate([90, 0, 0]) cylinder(r=8.25, h=10);
                translate([10.5,-0.5,15]) hull() {
                    cube([9,1,5]);
                    translate([0,4,-4]) cube([9,1,11]);
                }
            }
            //agujeros montaje
            union() {
                translate([-36.5,-27.5,-1]) cylinder(r=1.25, h=16);
                translate([66.5,-27.5,-1]) cylinder(r=1.25, h=16);
                translate([15,36.5,-1]) cylinder(r=1.25, h=16);
                translate([15,-91.25,-1]) cylinder(r=1.25, h=14);
            }
        }
    }
}

module base() {
    difference() {
        union() {
            //base
            hull() {
                translate([0, -55, 0]) cylinder(r=40, h=3);        //esquina delantera derecha
                translate([30, -55, 0]) cylinder(r=40, h=3);       //esquina delantera izquierda
                translate([0, 0, 0]) cylinder(r=40, h=3);          //esquina trasera derecha
                translate([30, 0, 0]) cylinder(r=40, h=3);         //esquina trasera izquierda
            }
            //altura torniller√≠a
            union() {
                //portapilas
                translate([-12.1,-27.5,-1]) cylinder(r=3.5, h=1);
                translate([42.6,-27.5,-1]) cylinder(r=3.5, h=1);
                //motor
                translate([-14.75,-21.5,-1]) cube([59.4,23.7,1]);
            }
            //sujeci√≥n eje delantero
            union() {
                translate([-15,-60,0]) hull() {
                    translate([0,-7.5,-1]) cube([5,15,1]);
                    translate([0,0,-12.5]) rotate([0,90,0]) cylinder(r=5, h=5);
                }
                translate([40,-60,0]) hull() {
                    translate([0,-7.5,-1]) cube([5,15,1]);
                    translate([0,0,-12.5]) rotate([0,90,0]) cylinder(r=5, h=5);
                }
            }
        }
        union() {
            //ruedas
            union() {
                translate([-49, -60, -12.5]) rotate([0, 90, 0]) cylinder(r=27.5, h=30);    //rueda delantera derecha
                translate([49, -60, -12.5]) rotate([0, 90, 0]) cylinder(r=27.5, h=30);    //rueda delantera izquierda
                translate([-49, 5, -12.5]) rotate([0, 90, 0]) cylinder(r=27.5, h=30);      //rueda traseras derecha
                translate([49, 5, -12.5]) rotate([0, 90, 0]) cylinder(r=27.5, h=30);      //rueda traseras izquierda
            }
            //agujeros montaje
            union() {
                translate([-36.5,-27.5,-1]) cylinder(r=1.75, h=5);
                translate([66.5,-27.5,-1]) cylinder(r=1.75, h=5);
                translate([15,36.5,-1]) cylinder(r=1.75, h=5);
                translate([15,-91.25,-1]) cylinder(r=1.75, h=5);
            }
            //agujeros fijaci√≥n motor
            translate([-9.75,-16.5,-2]) union() {
                //posici√≥n A
                cylinder(r=1.25, h=6);
                translate([49.4,0,0]) cylinder(r=1.25, h=6);
                //posici√≥n C
                translate([0,13.7,0]) cylinder(r=1.25, h=6);
                translate([49.4,13.7,0]) cylinder(r=1.25, h=6);
            }
            translate([15,-60,-12.5]) translate([-50,0,0]) rotate([0,90,0]) cylinder(h=100, r=1.5);
            //agujeros fijaci√≥n portapilas
            translate([-12.1,-27.5,-2]) union() {
                cylinder(r=1.25, h=6);
                translate([54.7,0,0]) cylinder(r=1.25, h=6);
            }
            //agujeros pasacables
            union() {
                translate([15,-73,-1]) cylinder(r=4, h=5);
                translate([9.06,-83.4,-1]) cube([12,4,5]);
            }
        }
    }
}

module spacer() {
    difference() {
        cylinder(r=5, h=22);
        translate([0,0,-1]) cylinder(r=1.75, h=24);
    }
}

module led() {
    difference() {
        union() {
            sphere(r=2.5);
            rotate([-90,0,0]) cylinder(r=2.5, h=5.5);
            translate([0,5.25,0]) rotate([-90,0,0]) cylinder(r=3, h=1);
        }
        translate([2.5,5,-2.5]) cube([2,2,5]);
    }
}

module lcd() {
    color("navy") difference() {
        union() {
            cube([80,36,1.6]);  //pcb
            translate([4.15,3.1,1.6]) cube([71.7,26.8,8]); //pantalla
            translate([8,7,1.6]) cube([72,19,4]); //reflector
            for(i = [8:2.54:(2.54*15+8)]) {
                translate([i,33.5,0]) cylinder(r=0.5, h=5.6, $fn=4); //cabecera
            }
        }
        union() { //agujeros montaje
            translate([2.5,2.5,-1]) cylinder(r=1.5, h=4);
            translate([2.5,33.5,-1]) cylinder(r=1.5, h=4);
            translate([77.5,33.5,-1]) cylinder(r=1.5, h=4);
            translate([77.5,2.5,-1]) cylinder(r=1.5, h=4);
        }
    }
}

module hcsr04() {
    color("silver") union() {
        cube([45.5,20.3,1.6]);
        translate([9.7,10.6,1.6]) cylinder(r=8, h=12.2);
        translate([35.7,10.6,1.6]) cylinder(r=8, h=12.2);
        translate([19.7,17.5,1.6]) hull() {
            cylinder(r=2.3,h=3.5);
            translate([6.4,0,0]) cylinder(r=2.3,h=3.5);
        }
        for(i = [19:2.54:(2.54*3+19)]) {
            translate([i,1.9,-4.1]) cylinder(r=0.5, h=7, $fn=4); //cabecera
            translate([i,1.9,-3.6]) rotate([90,0,0]) cylinder(r=0.5, h=7.8, $fn=4); //cabecera
        }
    }
}

module portapilas() {
    color("black") difference() {
        union() {
            cube([62.5,58,16]);
            translate([8.5,0,09]) rotate([90,0,0]) cylinder(r=3,h=2.5);
            translate([22,0,9]) rotate([90,0,0]) cylinder(r=4.5,h=2.5, $fn=6);
        }
        union() {
            translate([3.9,29,-1]) cylinder(r=1.5, h=18);
            translate([19.5,29,-1]) cylinder(r=1.5, h=18);
            translate([43,29,-1]) cylinder(r=1.5, h=18);
            translate([58.6,29,-1]) cylinder(r=1.5, h=18);
        }
    }
}

module rueda() {
    //lanta
    color("yellow") difference() {
        union() {
            rotate([90,0,0]) cylinder(r=3,h=28.3);       //eje
            translate([0,-3,0]) rotate([90,0,0]) cylinder(r=12.1,h=25.3);    //llanta
        }
        translate([0,-18.9,0]) rotate([90,0,0]) cylinder(r=8.5,h=10);   //interior llanta
    }
    //neumatico
    color("black") translate([0,-0.65,0]) difference() {
        rotate([90,0,0]) cylinder(r=25,h=30);   //goma
        translate([0,1,0]) rotate([90,0,0]) cylinder(r=12,h=32);  //llanta
    }
}

module roben_zond() {
    color("darkgreen") difference() {
        union() {
            cube([47.7,90.3,1.6+11+2.5]);
            translate([3.1,0,1.6+2.5]) cube([44.6,18,19]);  //arduino
            *translate([20.6,26.5,1.6+2.5]) cube([15.8,3.5,46]);  //bluetooth
            translate([26.2,9.4,-6.5]) cylinder(r=6, h=9);  //piezo
        }
        union() {
            translate([7.2,77.6,-1]) cylinder(r=2.2, h=17);
            translate([7.2,70,-1]) cylinder(r=2.2, h=17);
            translate([7.2,55.4,-1]) cylinder(r=2.2, h=17);
            translate([7.2,47.8,-1]) cylinder(r=2.2, h=17);
            translate([7.2,32.5,-1]) cylinder(r=2.2, h=17);
            translate([7.2,24.9,-1]) cylinder(r=2.2, h=17);
            translate([40.5,77.6,-1]) cylinder(r=2.2, h=17);
            translate([40.5,70,-1]) cylinder(r=2.2, h=17);
            translate([40.5,55.4,-1]) cylinder(r=2.2, h=17);
            translate([40.5,47.8,-1]) cylinder(r=2.2, h=17);
            translate([40.5,32.5,-1]) cylinder(r=2.2, h=17);
            translate([40.5,24.9,-1]) cylinder(r=2.2, h=17);
        }
    }
}

module eje_delantero() {
    color("grey") union() {
        translate([-50,0,0]) rotate([0,90,0]) cylinder(h=32, r=1.5, $fn=6);
        translate([-35,0,0]) rotate([0,90,0]) cylinder(h=5, r=5);
        translate([-25,0,0]) rotate([0,90,0]) cylinder(h=5, r=5);
        translate([18,0,0]) rotate([0,90,0]) cylinder(h=32, r=1.5, $fn=6);
        translate([20,0,0]) rotate([0,90,0]) cylinder(h=5, r=5);
        translate([30,0,0]) rotate([0,90,0]) cylinder(h=5, r=5);
    }
}

module motor(ratio) {
    //1 = 58:1 out A
    //2 = 58:1 out B
    //3 = 203:1 out C
    
    color("grey") translate([-50,0,0]) rotate([0,90,0]) cylinder(h=100, r=1.5, $fn=6);
    if (ratio == 1) color("grey") motor_gearbox();
    else if (ratio == 2) translate([0,-2.3,7.5]) color("grey") motor_gearbox();
    else if (ratio == 3) translate([0,-13.7,0]) color("grey") motor_gearbox();
}
module motor_gearbox() {
    translate([-19.5,-3.5,-11.5]) difference() {
        union() {
            cube([39,75,23]);
            translate([-4.65,0,0]) cube([48.3,39.4,23]);
            translate([-8.7,19.5,0]) cube([56.4,11,2]);
        }
        union() {
            translate([-5.2,25,-1]) cylinder(r=1.5, h=4);
            translate([44.2,25,-1]) cylinder(r=1.5, h=4);
        }
    }
}
